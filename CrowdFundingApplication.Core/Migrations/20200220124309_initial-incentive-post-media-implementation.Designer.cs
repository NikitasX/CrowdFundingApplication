// <auto-generated />
using System;
using CrowdFundingApplication.Core.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace CrowdFundingApplication.Core.Migrations
{
    [DbContext(typeof(CrowdFundingDbContext))]
    [Migration("20200220124309_initial-incentive-post-media-implementation")]
    partial class initialincentivepostmediaimplementation
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("CrowdFundingApplication.Core.Model.BackedIncentives", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<int>("IncentiveId")
                        .HasColumnType("int");

                    b.Property<DateTimeOffset>("BackedIncentiveDateCreated")
                        .HasColumnType("datetimeoffset");

                    b.HasKey("UserId", "IncentiveId");

                    b.HasIndex("IncentiveId");

                    b.ToTable("BackedIncentives");
                });

            modelBuilder.Entity("CrowdFundingApplication.Core.Model.Incentive", b =>
                {
                    b.Property<int>("IncentiveId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTimeOffset>("IncentiveDateCreated")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("IncentiveDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("IncentivePrice")
                        .HasColumnType("decimal(18,2)")
                        .HasMaxLength(20);

                    b.Property<string>("IncentiveReward")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IncentiveTitle")
                        .IsRequired()
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<int?>("ProjectId")
                        .HasColumnType("int");

                    b.HasKey("IncentiveId");

                    b.HasIndex("ProjectId");

                    b.ToTable("Incentive");
                });

            modelBuilder.Entity("CrowdFundingApplication.Core.Model.Media", b =>
                {
                    b.Property<int>("MediaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTimeOffset>("MediaDateCreated")
                        .HasColumnType("datetimeoffset");

                    b.Property<int>("MediaType")
                        .HasColumnType("int");

                    b.Property<string>("MediaURL")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ProjectId")
                        .HasColumnType("int");

                    b.HasKey("MediaId");

                    b.HasIndex("ProjectId");

                    b.ToTable("Media");
                });

            modelBuilder.Entity("CrowdFundingApplication.Core.Model.Post", b =>
                {
                    b.Property<int>("PostId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTimeOffset>("PostDateCreated")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("PostExcerpt")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PostTitle")
                        .IsRequired()
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<int?>("ProjectId")
                        .HasColumnType("int");

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.HasKey("PostId");

                    b.HasIndex("ProjectId");

                    b.HasIndex("UserId");

                    b.ToTable("Post");
                });

            modelBuilder.Entity("CrowdFundingApplication.Core.Model.Project", b =>
                {
                    b.Property<int>("ProjectId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("ProjectCapitalAcquired")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("ProjectCategory")
                        .HasColumnType("int");

                    b.Property<DateTimeOffset>("ProjectDateCreated")
                        .HasColumnType("datetimeoffset");

                    b.Property<DateTimeOffset>("ProjectDateExpiring")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("ProjectDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("ProjectFinancialGoal")
                        .HasColumnType("decimal(18,2)")
                        .HasMaxLength(20);

                    b.Property<string>("ProjectTitle")
                        .IsRequired()
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.HasKey("ProjectId");

                    b.HasIndex("UserId");

                    b.ToTable("Project");
                });

            modelBuilder.Entity("CrowdFundingApplication.Core.Model.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTimeOffset>("UserDateCreated")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("UserEmail")
                        .IsRequired()
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<string>("UserFirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserLastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<string>("UserPhone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserVat")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId");

                    b.HasIndex("UserEmail")
                        .IsUnique();

                    b.ToTable("User");
                });

            modelBuilder.Entity("CrowdFundingApplication.Core.Model.BackedIncentives", b =>
                {
                    b.HasOne("CrowdFundingApplication.Core.Model.Incentive", "BackedIncentive")
                        .WithMany("IncentiveBackers")
                        .HasForeignKey("IncentiveId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CrowdFundingApplication.Core.Model.User", "BackedUser")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("CrowdFundingApplication.Core.Model.Incentive", b =>
                {
                    b.HasOne("CrowdFundingApplication.Core.Model.Project", "Project")
                        .WithMany("ProjectIncentives")
                        .HasForeignKey("ProjectId");
                });

            modelBuilder.Entity("CrowdFundingApplication.Core.Model.Media", b =>
                {
                    b.HasOne("CrowdFundingApplication.Core.Model.Project", "Project")
                        .WithMany("ProjectMedia")
                        .HasForeignKey("ProjectId");
                });

            modelBuilder.Entity("CrowdFundingApplication.Core.Model.Post", b =>
                {
                    b.HasOne("CrowdFundingApplication.Core.Model.Project", "Project")
                        .WithMany("ProjectPosts")
                        .HasForeignKey("ProjectId");

                    b.HasOne("CrowdFundingApplication.Core.Model.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId");
                });

            modelBuilder.Entity("CrowdFundingApplication.Core.Model.Project", b =>
                {
                    b.HasOne("CrowdFundingApplication.Core.Model.User", "User")
                        .WithMany("UserCreatedProjects")
                        .HasForeignKey("UserId");
                });
#pragma warning restore 612, 618
        }
    }
}
